#!/bin/sh

set_hostname() {
	if [ "${DEVICE}" == "n705" ] || [ "${DEVICE}" == "n905b" ] || [ "${DEVICE}" == "n905c" ] || [ "${DEVICE}" == "n613" ] || [ "${DEVICE}" == "n873" ] || [ "${DEVICE}" == "n236" ] || [ "${DEVICE}" == "n437" ] || [ "${DEVICE}" == "n306" ] || [ "${DEVICE}" == "n249" ] || [ "${DEVICE}" == "n418" ]; then
		HOSTNAME="kobo"
	elif [ "${DEVICE}" == "kt" ]; then
		HOSTNAME="kindle"
	elif [ "${DEVICE}" == "emu" ] || [ "${DEVICE}" == "bpi" ]; then
		HOSTNAME="inkbox"
	else
		HOSTNAME="inkbox"
	fi
	echo "${HOSTNAME}" > /tmp/hostname
	mount --bind /tmp/hostname /mnt/etc/hostname
}

DEVICE=$(cat /opt/device)
if [ "${DEVICE}" == "n705" ] || [ "${DEVICE}" == "n905b" ] || [ "${DEVICE}" == "n905c" ] || [ "${DEVICE}" == "n613" ] || [ "${DEVICE}" == "n236" ] || [ "${DEVICE}" == "n437" ] || [ "${DEVICE}" == "n306" ] || [ "${DEVICE}" == "n249" ] || [ "${DEVICE}" == "n418" ] || [ "${DEVICE}" == "kt" ]; then
	ROOTFS_FMT="ext4"
	RECOVERYFS_PART=2
elif [ "${DEVICE}" == "n873" ]; then
	ROOTFS_FMT="vfat"
	RECOVERYFS_PART=5
else
	ROOTFS_FMT="ext4"
	RECOVERYFS_PART=2
fi

if [ "${DEVICE}" == "n905b" ]; then
	GENUINE_OROOTFS_CHECKSUM="fc3e573d3b783536629952d3f57b1106ca8645719486c4f1d6302d6b6709c384"
	GENUINE_RECOVERYFS_CHECKSUM="7f771fde42624452185b9e46b2990382d8c649ea5d1be5788caa2b3f1676ebe7"
elif [ "${DEVICE}" == "n873" ]; then
	GENUINE_OROOTFS_CHECKSUM="0000000000000000000000000000000000000000000000000000000000000000"
	GENUINE_RECOVERYFS_CHECKSUM="0000000000000000000000000000000000000000000000000000000000000000"
fi

if [ "${1}" != "recovery" ]; then
	## Mounting root filesystem with squashfuse and unionfs (read-only by default)
	mkdir -p /rootfs-part
	mkdir -p /overlaymount-rootfs
	mount -t "${ROOTFS_FMT}" -o nosuid /dev/mmcblk0p3 /rootfs-part
	/usr/bin/unsquashfs -f -d /key /opt/key.sqsh &>/dev/null
	echo "Verifying root filesystem's digital signature ..."
	/usr/bin/openssl dgst -sha256 -verify /key/public.pem -signature /rootfs-part/rootfs.squashfs.dgst /rootfs-part/rootfs.squashfs &>/dev/null
	if [ ${?} != 0 ]; then
		echo "Root filesystem's digital signature is invalid! Shutting down ..."
		sync
		umount /rootfs-part -l -f
		/etc/init.d/inkbox-splash alert_splash 3 flag
		busybox poweroff
		exit 1
	else
		echo "Done."
		# Some mountpoints
		mkdir -p /rootfs-part/rootfs/read
		mkdir -p /rootfs-part/rootfs/work
		if [ "${2}" == "std" ]; then
			# Prevent arbitrary code execution
			rm -rf /rootfs-part/rootfs/write
		fi
		mkdir -p /rootfs-part/rootfs/write
		mkdir -p /rootfs-part/rootfs/overlay

		/usr/bin/openssl dgst -sha256 -verify /key/public.pem -signature /rootfs-part/overlaymount-rootfs.squashfs.dgst /rootfs-part/overlaymount-rootfs.squashfs &>/dev/null
		if [ ${?} != 0 ]; then
			echo "Utility root filesystem's signature is invalid! Shutting down ..."
			sync
			umount /rootfs-part -l -f
			/etc/init.d/inkbox-splash alert_splash 5 flag
			busybox poweroff
			exit 1
		else
			losetup /dev/loop1 /rootfs-part/overlaymount-rootfs.squashfs
			mount /dev/loop1 /overlaymount-rootfs
		fi

		# Filesystems
		mount -t devtmpfs devtmpfs /overlaymount-rootfs/dev
		mount -t sysfs sysfs /overlaymount-rootfs/sys
		mount -t tmpfs tmpfs /overlaymount-rootfs/mnt
		mount -t proc proc /overlaymount-rootfs/proc
		mkdir -p /overlaymount-rootfs/mnt/rootfs-part
		mkdir -p /overlaymount-rootfs/mnt/rootfs
		mount --bind /rootfs-part /overlaymount-rootfs/mnt/rootfs-part
		mount --bind /rootfs-part/rootfs /overlaymount-rootfs/mnt/rootfs
		rm -r /mnt
		ln -s /overlaymount-rootfs/mnt/rootfs/overlay /mnt

		busybox chroot /overlaymount-rootfs "/bin/squashfuse" "-o" "allow_other" "/mnt/rootfs-part/rootfs.squashfs" "/mnt/rootfs/read"
		if [ "${1}" == "ro" ]; then
			if [ "${2}" == "std" ]; then
				busybox chroot /overlaymount-rootfs "/usr/local/bin/unionfs" "-o" "ro,nosuid,cow,allow_other" "/mnt/rootfs/write=RW:/mnt/rootfs/read=RO" "/mnt/rootfs/overlay"
			else
				busybox chroot /overlaymount-rootfs "/usr/local/bin/unionfs" "-o" "ro,cow,allow_other" "/mnt/rootfs/write=RW:/mnt/rootfs/read=RO" "/mnt/rootfs/overlay"
			fi
		elif [ "${1}" == "rw" ]; then
			if [ "${2}" == "std" ]; then
				busybox chroot /overlaymount-rootfs "/usr/local/bin/unionfs" "-o" "ro,nosuid,cow,allow_other" "/mnt/rootfs/write=RW:/mnt/rootfs/read=RO" "/mnt/rootfs/overlay"
			else
				busybox chroot /overlaymount-rootfs "/usr/local/bin/unionfs" "-o" "cow,allow_other" "/mnt/rootfs/write=RW:/mnt/rootfs/read=RO" "/mnt/rootfs/overlay"
			fi
		else
			echo "Invalid argument"
			exit 1
		fi

		cp /opt/device /tmp/device
		mount --bind /tmp/device /mnt/opt/inkbox_device
		if [ "${DEVICE}" != "kt" ]; then
			mount --bind /mnt/opt/bin/fbink/fbink-kobo /mnt/opt/bin/fbink/fbink
			mount --bind /mnt/opt/bin/fbink/fbdepth-kobo /mnt/opt/bin/fbink/fbdepth
			mount --bind /mnt/opt/bin/fbink/libfbink-kobo.so /mnt/opt/bin/fbink/libfbink.so
		else
			mount --bind /mnt/opt/bin/fbink/fbink-kindle /mnt/opt/bin/fbink/fbink
			mount --bind /mnt/opt/bin/fbink/fbdepth-kindle /mnt/opt/bin/fbink/fbdepth
			mount --bind /mnt/opt/bin/fbink/libfbink-kindle.so /mnt/opt/bin/fbink/libfbink.so
		fi
		set_hostname
	fi
else
	## Mounting recovery filesystem
	mkdir -p /recoveryfs-part
	mkdir -p /overlaymount-rootfs
	mount -t ext4 -o nosuid,ro "/dev/mmcblk0p${RECOVERYFS_PART}" "/recoveryfs-part"

	if [ -z "${EXPRESS_VERIFICATION}" ]; then
		# Safe
		/usr/bin/unsquashfs -f -d /key /opt/key.sqsh &>/dev/null
		/usr/bin/openssl dgst -sha256 -verify /key/public.pem -signature /recoveryfs-part/overlaymount-rootfs.squashfs.dgst /recoveryfs-part/overlaymount-rootfs.squashfs &>/dev/null
		if [ ${?} != 0 ]; then
			echo "Utility root filesystem's signature is invalid! Shutting down ..."
			sync
			umount -l -f /recoveryfs-part
			/etc/init.d/inkbox-splash alert_splash 5 flag
			busybox poweroff
			exit 1
		else
			losetup /dev/loop1 /recoveryfs-part/overlaymount-rootfs.squashfs
			mount /dev/loop1 /overlaymount-rootfs
		fi
	else
		# Dangerous
		LOCAL_OROOTFS_CHECKSUM=$(dd if=/recoveryfs-part/overlaymount-rootfs.squashfs bs=1M count=1 status=none | sha256sum | awk '{ print $1 }')
		if [ "${LOCAL_OROOTFS_CHECKSUM}" != "${GENUINE_OROOTFS_CHECKSUM}" ]; then
			echo "EXPRESS_VERIFICATION: overlaymount-rootfs.squashfs: checksum invalid!"
			exit 1
		else
			losetup /dev/loop1 /recoveryfs-part/overlaymount-rootfs.squashfs
			mount /dev/loop1 /overlaymount-rootfs
		fi
	fi

	# Filesystems
	mount -t devtmpfs devtmpfs /overlaymount-rootfs/dev
	mount -t sysfs sysfs /overlaymount-rootfs/sys
	mount -t tmpfs tmpfs /overlaymount-rootfs/mnt
	mount -t proc proc /overlaymount-rootfs/proc
	mkdir -p /overlaymount-rootfs/mnt/recoveryfs-part
	mkdir -p /overlaymount-rootfs/mnt/recoveryfs
	mount --bind /recoveryfs-part /overlaymount-rootfs/mnt/recoveryfs-part
	rm -r /mnt
	ln -s /overlaymount-rootfs/mnt/recoveryfs /mnt

	if [ -z "${EXPRESS_VERIFICATION}" ]; then
		# Safe
		echo "Verifying recovery filesystem's digital signature ..."
		/usr/bin/openssl dgst -sha256 -verify /key/public.pem -signature /recoveryfs-part/recoveryfs.squashfs.dgst /recoveryfs-part/recoveryfs.squashfs &>/dev/null
		if [ ${?} != 0 ]; then
			echo "Recovery filesystem's digital signature is invalid! Shutting down ..."
			sync
			umount /recoveryfs-part -l -f
			/etc/init.d/inkbox-splash alert_splash 4 flag
			busybox poweroff
			exit 1
		else
			echo "Done."
			busybox chroot /overlaymount-rootfs "/bin/squashfuse" "-o" "allow_other" "/mnt/recoveryfs-part/recoveryfs.squashfs" "/mnt/recoveryfs"
		fi

		cp /opt/device /tmp/device
		mount --bind /tmp/device /overlaymount-rootfs/mnt/recoveryfs/opt/device
	else
		# Dangerous
		LOCAL_RECOVERYFS_CHECKSUM=$(dd if=/recoveryfs-part/recoveryfs.squashfs bs=1M count=1 status=none | sha256sum | awk '{ print $1 }')
		if [ "${LOCAL_RECOVERYFS_CHECKSUM}" != "${GENUINE_RECOVERYFS_CHECKSUM}" ]; then
			echo "EXPRESS_VERIFICATION: recoveryfs.squashfs: checksum invalid!"
			exit 1
		else
			busybox chroot /overlaymount-rootfs "/bin/squashfuse" "-o" "allow_other" "/mnt/recoveryfs-part/recoveryfs.squashfs" "/mnt/recoveryfs"
		fi

		cp /opt/device /tmp/device
		mount --bind /tmp/device /overlaymount-rootfs/mnt/recoveryfs/opt/device
	fi
	if [ "${DEVICE}" != "kt" ]; then
		mount --bind /mnt/opt/bin/fbink/fbink-kobo /mnt/opt/bin/fbink/fbink
	else
		mount --bind /mnt/opt/bin/fbink/fbink-kindle /mnt/opt/bin/fbink/fbink
	fi
	set_hostname
fi

